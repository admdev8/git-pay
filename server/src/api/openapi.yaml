openapi: 3.0.0
info:
  title: GitPay API
  description: |
    Is developed as a part of gitpay.ru project by Microbo team
  termsOfService: http://gitpay.ru/terms/
  contact:
    name: Aleksandr A. Davydenko
    email: alexandrdavydenko@yandex.ru
  license:
    name: Apache 2.0
  version: 0.0.1
servers:
- url: /api/v1
  description: An entry point for accessing API
paths:
  /repos:
    get:
      summary: Returns a list of registered repositories
      operationId: getRegisteredRepos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayOfRepos'
                x-content-type: application/json
      x-swagger-router-controller: Default
  /pulls:
    get:
      summary: Returns a list of registered pull-requests
      operationId: getRegisteredPulls
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayOfPullRequests'
                x-content-type: application/json
      x-swagger-router-controller: Default
  /deals:
    get:
      summary: Returns a list of registered deals
      operationId: getRegisteredDeals
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayOfDeals'
                x-content-type: application/json
      x-openapi-router-controller: Deals
      x-swagger-router-controller: Default
    post:
      summary: Creates a new deal
      operationId: addNewDeal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DealInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DealInfo'
                x-content-type: application/json
      x-swagger-router-controller: Default
  /deals/{platformDealId}:
    get:
      summary: Retriee deal details & status
      operationId: getDealDetails
      parameters:
      - name: platformDealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealInfo'
      x-swagger-router-controller: Default
    delete:
      summary: Remove deal, e.g. if its not accepted yet or just orphan
      operationId: deleteDeal
      parameters:
      - name: platformDealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealInfo'
      x-swagger-router-controller: Default
  /deals/{platformDealId}/accept:
    post:
      summary: Accept deal byt Payer
      operationId: acceptDeal
      parameters:
      - name: platformDealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealInfo'
      x-swagger-router-controller: Default
  /deals/{platformDealId}/cancel:
    post:
      summary: Cancel deal, either by Payer or by Benificiar
      operationId: cancelDeal
      parameters:
      - name: platformDealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealInfo'
      x-swagger-router-controller: Default
  /deals/{platformDealId}/commit:
    post:
      summary: Commit & pay for the deal
      operationId: commitDeal
      parameters:
      - name: platformDealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealInfo'
      x-swagger-router-controller: Default
components:
  schemas:
    DealState:
      type: string
      enum:
      - Created
      - Paid
      - PayoutProcessError
      - CancelError
      - PayoutProcessing
      - Completed
      - PaymentHold
      - Canceling
      - Canceled
    DealType:
      type: string
      enum:
      - Deferred
      - Instant
    ArrayOfRepos:
      type: array
      items:
        $ref: '#/components/schemas/RepoInfo'
    RepoInfo:
      type: object
      additionalProperties: true
    ArrayOfPullRequests:
      type: array
      items:
        $ref: '#/components/schemas/PullRequestInfo'
    PullRequestInfo:
      type: object
      additionalProperties: true
    ArrayOfDeals:
      type: array
      items:
        $ref: '#/components/schemas/DealInfo'
    DealInfo:
      type: object
      properties:
        PlatformDealId:
          type: string
          readOnly: true
        DealStateId:
          $ref: '#/components/schemas/DealState'
        CreateDate:
          type: string
          format: date-time
          readOnly: true
        UpdateDate:
          type: string
          format: date-time
          readOnly: true
        ExpireDate:
          type: string
          format: date-time
          readOnly: true
        Amount:
          type: number
        CurrencyId:
          type: integer
        PlatformPayerId:
          type: string
        PayerPhoneNumber:
          type: string
        PayerPaymentToolId:
          type: integer
        PlatformBeneficiaryId:
          type: string
        BeneficiaryPaymentToolId:
          type: string
        ShortDescription:
          type: integer
        FullDescription:
          type: string
        DealTypeId:
          $ref: '#/components/schemas/DealType'
        LastErrorCode:
          type: string
        LastErrorMessage:
          type: string
      example:
        PlatformBeneficiaryId: PlatformBeneficiaryId
        LastErrorMessage: LastErrorMessage
        ExpireDate: 2000-01-23T04:56:07.000+00:00
        Amount: 0.80082819046101150206595775671303272247314453125
        DealTypeId: Deferred
        DealStateId: Created
        PayerPhoneNumber: PayerPhoneNumber
        CreateDate: 2000-01-23T04:56:07.000+00:00
        CurrencyId: 6
        ShortDescription: 5
        PayerPaymentToolId: 1
        BeneficiaryPaymentToolId: BeneficiaryPaymentToolId
        UpdateDate: 2000-01-23T04:56:07.000+00:00
        PlatformDealId: PlatformDealId
        PlatformPayerId: PlatformPayerId
        LastErrorCode: LastErrorCode
        FullDescription: FullDescription
  responses:
    ErrorResponse:
      description: Some exception occurred
      content:
        applciation/json:
          schema:
            type: object
            properties:
              message:
                type: string
