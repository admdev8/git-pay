openapi: 3.0.0

info:
  title: "GitPay API"

  description: >
    Is developed as a part of gitpay.ru project by Microbo team

  termsOfService: "http://gitpay.ru/terms/"

  contact:
    name: "Aleksandr A. Davydenko"
    email: "alexandrdavydenko@yandex.ru"

  license:
    name: "Apache 2.0"
    #url: "https://github.com/OAI/OpenAPI-Specification/blob/master/https://www.apache.org/licenses/LICENSE-2.0.html"

  version: "0.0.1"

servers:
  - url: "/api/v1"
    description: "An entry point for accessing API"

tags:
  - name: users
    description: "User-related operations"
  - name: repos
    description: "Working with repositories"
  - name: pulls
    description: "Working with pull-requests"
  - name: deals
    description: "Deals management"

paths:

  /repos:
    get:
      summary: "Returns a list of registered repositories"
      operationId: "getRegisteredRepos"
      tags:
        - repos
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArrayOfRepos"

  /pulls:
    get:
      summary: "Returns a list of registered pull-requests"
      operationId: "getRegisteredPulls"
      tags:
        - pulls
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArrayOfPullRequests"


  /deals:
    get:
      summary: "Returns a list of registered deals"
      operationId: "getRegisteredDeals"
      tags:
        - deals
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArrayOfDeals"

    post:
      summary: "Creates a new deal"
      operationId: "addNewDeal"
      tags:
        - deals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DealInfo"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DealInfo"

  /deals/{platformDealId}:
    get:
      summary: "Retriee deal details & status"
      operationId: "getDealDetails"
      tags:
        - deals
      parameters:
        - name: "platformDealId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealInfo"

    delete:
      summary: "Remove deal, e.g. if its not accepted yet or just orphan"
      operationId: "deleteDeal"
      tags:
        - deals
      parameters:
        - name: "platformDealId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealInfo"

  /deals/{platformDealId}/accept:
    post:
      summary: "Accept deal byt Payer"
      operationId: "acceptDeal"
      tags:
        - deals
      parameters:
        - name: "platformDealId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealInfo"

  /deals/{platformDealId}/cancel:
    post:
      summary: "Cancel deal, either by Payer or by Benificiar"
      operationId: "cancelDeal"
      tags:
        - deals
      parameters:
        - name: "platformDealId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealInfo"

  /deals/{platformDealId}/commit:
    post:
      summary: "Commit & pay for the deal"
      operationId: "commitDeal"
      tags:
        - deals
      parameters:
        - name: "platformDealId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealInfo"

  /users/{userId}/events:
    get:
      summary: "Return User-specific Events, used on Activity tab"
      operationId: "getUserEvents"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfEvents"

  /users/{userId}/settings:
    get:
      summary: "User-specific settings"
      operationId: "getUserSettings"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"

    put:
      summary: "Update user settings"
      operationId: "updateUserSettings"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettings"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"

  /users/{userId}/repos:
    get:
      summary: "User-specific repositories"
      operationId: "getUserRepos"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfRepos"

    post:
      summary: "Add the repository to the User's collection, as a an owner"
      operationId: "addUserRepo"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepoInfo"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepoInfo"

  /users/{userId}/repos/{repoId}:
    delete:
      summary: "Remove user repository"
      operationId: "removeUserRepo"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
        - name: "repoId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"

  /users/{userId}/pulls:
    get:
      summary: "User pull requests available for the deals"
      operationId: "getUserPulls"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfPullRequests"

    post:
      summary: "Add the pull request to the list of user work items"
      operationId: "addUserPull"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PullRequestInfo"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PullRequestInfo"

  /users/{userId}/pulls/{pullId}:
    delete:
      summary: "Remove pull request from the user's work items"
      operationId: "removeUserPull"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
        - name: "pullId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"

  /users/{userId}/deals:
    get:
      summary: "Get List of user deals (that could be either as payer or benificiary"
      operationId: "getUserDeals"
      tags:
        - users
      parameters:
        - name: "userId"
          in: path
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfUserDeals"

components:

  responses:
    ErrorResponse:
      description: "Some exception occurred"
      content:
        applciation/json:
          schema:
            type: object
            properties:
              message:
                type: string

  schemas:

    DealState:
      type: "string"
      enum:
        - Created
        - Paid
        - PayoutProcessError
        - CancelError
        - PayoutProcessing
        - Completed
        - PaymentHold
        - Canceling
        - Canceled

    DealType:
      type: "string"
      enum:
        - Deferred
        - Instant

    ArrayOfRepos:
      type: array
      items:
        $ref: "#/components/schemas/RepoInfo"

    RepoInfo:
      type: "object"
      additionalProperties: true

    ArrayOfPullRequests:
      type: array
      items:
        $ref: "#/components/schemas/PullRequestInfo"

    PullRequestInfo:
      type: "object"
      additionalProperties: true

    ArrayOfDeals:
      type: array
      items:
        $ref: "#/components/schemas/DealInfo"

    DealInfo:
      type: "object"
      properties:
        PlatformDealId:
          type: "string"
          readOnly: true
        DealStateId:
          $ref: "#/components/schemas/DealState"
          readOnly: true
        CreateDate:
          type: "string"
          format: "date-time"
          example: "2015-01-07T21:45:33"
          readOnly: true
        UpdateDate:
          type: "string"
          format: "date-time"
          readOnly: true
        ExpireDate:
          type: "string"
          format: "date-time"
          readOnly: true
        Amount:
          type: "number"
        CurrencyId:
          type: "integer"
        PlatformPayerId:
          type: "string"
        PayerPhoneNumber:
          type: "string"
        PayerPaymentToolId:
          type: "integer"
        PlatformBeneficiaryId:
          type: "string"
        BeneficiaryPaymentToolId:
          type: "string"
        ShortDescription:
          type: "integer"
        FullDescription:
          type: "string"
        DealTypeId:
          $ref: "#/components/schemas/DealType"
          readOnly: true
        LastErrorCode:
          type: "string"
        LastErrorMessage:
          type: "string"

    ArrayOfEvents:
      type: array
      items:
        $ref: "#/components/schemas/Event"

    Event:
      type: "object"
      properties:
        EventId:
          type: "string"
          readOnly: true
        EventType:
          type: "string"
          readOnly: true
        CreateDate:
          type: "string"
          format: "date-time"
          example: "2015-01-07T21:45:33"
          readOnly: true
        Description:
          type: "string"
          readOnly: true
        Payload:
          type: "object"
          additionalProperties: true

    PaymentDetails:
      type: "object"
      properties:
        PaymentAccount:
          type: string
        PaymentBank:
          type: string
        PaymentBankBik:
          type: string
        PaymentBankAccount:
          type: string
        PaymentBankKpp:
          type: string
        PaymentBankInn:
          type: string
        PaymentBankOKPO:
          type: string
        PaymentBankOGRN:
          type: string

    BillingAccount:
      type: "object"
      properties:
        Plan:
          type: "string"
          readOnly: true

    UserSettings:
      type: "object"
      properties:
        UserId:
          type: "string"
        GitHubLogin:
          type: "string"
        RegisteredDate:
          type: "string"
          format: "date-time"
          readOnly: true
        UserDisplayName:
          type: "string"
        UserAvatarURL:
          type: "string"
        UserEmail:
          type: "string"
        BillingDetails:
          $ref: "#/components/schemas/BillingAccount"
        ContractSettings:
          type: "object"
          description: "Данные, выносимые при создании договора"
          properties:
            Sex:
              type: string
            Inn:
              type: string
            DateOfBirth:
              type: string
              format: "date"
            PassportDetails:
              type: string
            Address:
              type: string
            PaymentDetails:
              $ref: "#/components/schemas/PaymentDetails"

    ArrayOfUserDeals:
      type: array
      items:
        $ref: "#/components/schemas/UserDealInfo"

    UserDealInfo:
      type: "object"
      properties:
        PlatformDealId:
          type: "string"
          readOnly: true
        DealStateId:
          $ref: "#/components/schemas/DealState"
          readOnly: true
        CreateDate:
          type: "string"
          format: "date-time"
          example: "2015-01-07T21:45:33"
          readOnly: true
        UpdateDate:
          type: "string"
          format: "date-time"
          readOnly: true
        ExpireDate:
          type: "string"
          format: "date-time"
          readOnly: true
        Amount:
          type: "number"
        CurrencyId:
          type: "integer"
        PlatformPayerUserId:
          type: "string"
        PlatformBeneficiaryUserId:
          type: "string"
        ShortDescription:
          type: "integer"
        FullDescription:
          type: "string"