/**
 * GitPay API
 * Is developed as a part of gitpay.ru project by Microbo team 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: alexandrdavydenko@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BillingAccount from './model/BillingAccount';
import DealInfo from './model/DealInfo';
import DealState from './model/DealState';
import DealType from './model/DealType';
import Event from './model/Event';
import PaymentDetails from './model/PaymentDetails';
import UserDealInfo from './model/UserDealInfo';
import UserSettings from './model/UserSettings';
import UserSettingsContractSettings from './model/UserSettingsContractSettings';
import DealsApi from './api/DealsApi';
import PullsApi from './api/PullsApi';
import ReposApi from './api/ReposApi';
import UsersApi from './api/UsersApi';


/**
* Is_developed_as_a_part_of_gitpay_ru_project_by_Microbo_team.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GitPayApi = require('index'); // See note below*.
* var xxxSvc = new GitPayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GitPayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GitPayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GitPayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BillingAccount model constructor.
     * @property {module:model/BillingAccount}
     */
    BillingAccount,

    /**
     * The DealInfo model constructor.
     * @property {module:model/DealInfo}
     */
    DealInfo,

    /**
     * The DealState model constructor.
     * @property {module:model/DealState}
     */
    DealState,

    /**
     * The DealType model constructor.
     * @property {module:model/DealType}
     */
    DealType,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The PaymentDetails model constructor.
     * @property {module:model/PaymentDetails}
     */
    PaymentDetails,

    /**
     * The UserDealInfo model constructor.
     * @property {module:model/UserDealInfo}
     */
    UserDealInfo,

    /**
     * The UserSettings model constructor.
     * @property {module:model/UserSettings}
     */
    UserSettings,

    /**
     * The UserSettingsContractSettings model constructor.
     * @property {module:model/UserSettingsContractSettings}
     */
    UserSettingsContractSettings,

    /**
    * The DealsApi service constructor.
    * @property {module:api/DealsApi}
    */
    DealsApi,

    /**
    * The PullsApi service constructor.
    * @property {module:api/PullsApi}
    */
    PullsApi,

    /**
    * The ReposApi service constructor.
    * @property {module:api/ReposApi}
    */
    ReposApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
