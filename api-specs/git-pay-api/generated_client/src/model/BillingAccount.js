/**
 * GitPay API
 * Is developed as a part of gitpay.ru project by Microbo team 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: alexandrdavydenko@yandex.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillingAccount model module.
 * @module model/BillingAccount
 * @version 0.0.1
 */
class BillingAccount {
    /**
     * Constructs a new <code>BillingAccount</code>.
     * @alias module:model/BillingAccount
     */
    constructor() { 
        
        BillingAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillingAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingAccount} obj Optional instance to populate.
     * @return {module:model/BillingAccount} The populated <code>BillingAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingAccount();

            if (data.hasOwnProperty('Plan')) {
                obj['Plan'] = ApiClient.convertToType(data['Plan'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} Plan
 */
BillingAccount.prototype['Plan'] = undefined;






export default BillingAccount;

